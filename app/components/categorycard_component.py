"""
Categorycard Component.

This component was auto-generated by fletx.

üõ†Ô∏è Customization Guide:
- You can change the parent class (`ft.Container`) to inherit from any other Flet control.
  ‚Üí Example: `ft.Text`, `ft.Row`, `ft.Column`, or any custom Flet widget.
- You can add or modify internal reactive attributes.
  ‚Üí Example: `self.title: RxStr = rx_title`
- You can define simple or advanced bindings using the fletx decorators
"""

from flet import *

from app.models import CategoryInfo
# from fletx.core import (
#     RxStr
# )
# from fletx.decorators import (
#     obx
# )


class CategoryCard(Container):    
    """Reactive Categorycard Widget"""

    def __init__(
        self, 
        category: CategoryInfo, 
        row: bool = False, 
        **kwargs
    ):
        # üìù Define your reactive properties
        self.row: bool = row
        self.category = category

        # üõ†Ô∏è kwargs allows passing any Flet control arguments like bgcolor, padding, etc.
        super().__init__(**kwargs)

        self.content = self.build()

    def build(self):
        """Consruct appropriate Category Card widget."""

        return self.build_row() if self.row else self.build_col()
    
    def build_row(self):
        """Build Row Component"""
        return Row(
            expand = True
        )
    
    def build_col(self):
        """Build Column Component."""

        return Column(
            spacing = 10,
            alignment = MainAxisAlignment.CENTER,
            horizontal_alignment = CrossAxisAlignment.CENTER,
            controls = [
                CircleAvatar(
                    width = 80,
                    height = 80,
                    bgcolor = Colors.SURFACE,
                    foreground_image_src = self.category.image,
                ),

                # CATEGORY NAME
                Text(
                    self.category.name,
                    size = 11,
                    weight = FontWeight.W_400
                )
            ]
        )